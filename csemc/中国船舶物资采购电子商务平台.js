// http://td.ebuy.csemc.com/exp/querybusiness/common/xjggInfo.do?fphm=XJ021041200316

// window.onload = setTimeout("cu(99)", 200);
var document = {};

function cu(SG) {
    var qo, mo = "", no = "",
        oo = [0x35, 0x74, 0xf7, 0x7f, 0xa7, 0xde, 0x85, 0xae, 0x65, 0x7d, 0xbc, 0x6f, 0xf8, 0xbf, 0x88, 0xcf, 0xd8, 0xbf, 0xe8, 0x8c, 0x2d, 0x72, 0x38, 0x20, 0x37, 0xec, 0x74, 0x0b, 0x34, 0x9b, 0x7f, 0xf7, 0x5f, 0x18, 0x9f, 0x6c, 0x93, 0x37, 0xbb, 0x23, 0x87, 0x0f, 0x33, 0x07, 0x3b, 0xe8, 0xbc, 0xd0, 0x58, 0xcf, 0xee, 0x76, 0x9d, 0x81, 0x09, 0x95, 0x79, 0x01, 0xe6, 0x09, 0x7b, 0x03, 0x2c, 0xb3, 0xc7, 0xc0, 0x48, 0x6c, 0x0f, 0xe4, 0xe9, 0x21, 0x95, 0xb9, 0x5e, 0x15, 0x29, 0x6d, 0x86, 0xad, 0x55, 0xf9, 0xdd, 0x32, 0x86, 0x36, 0xaa, 0x4d, 0xc1, 0x39, 0xef, 0x44, 0x58, 0x8c, 0xa3, 0xfc, 0xd0, 0xe7, 0xfb, 0x13, 0x10, 0x74, 0x48, 0xec, 0x4f, 0xf4, 0x27, 0x8b, 0x6f, 0xd3, 0x6b, 0xaf, 0x24, 0x48, 0x7c, 0xd8, 0x3b, 0x3f, 0x94, 0xbb, 0x9a, 0x72, 0xca, 0xb1, 0x2a, 0x8a, 0xb1, 0x3a, 0xdd, 0x13, 0xd0, 0x47, 0x30, 0xc4, 0x18, 0xb5, 0x2a, 0xae, 0x51, 0xb8, 0xaa, 0x01, 0x79, 0x1e, 0x92, 0x7b, 0xdf, 0x33, 0x97, 0xeb, 0x07, 0xfc, 0x4f, 0x33, 0x27, 0x80, 0xf4, 0x57, 0xac, 0xf1, 0xfa, 0x9f, 0xb5, 0xb9, 0x0d, 0x63, 0x7c, 0x43, 0xeb, 0x53, 0x6a, 0x51, 0x0a, 0xad, 0x62, 0x4c, 0xd3, 0x5c, 0x83, 0x2c, 0x43, 0xcc, 0x7f, 0x07, 0xcf, 0x03, 0xab, 0xaf, 0x03, 0x5b, 0x71, 0xda, 0xf2, 0xc9, 0x6d, 0x9f, 0x64, 0xa7, 0xab, 0xf3, 0xfa, 0xe1, 0x9a, 0xb1, 0x7a, 0x53, 0x9b, 0x50, 0x67, 0x30, 0xc1, 0x49, 0x71, 0x1a, 0x41, 0x53, 0x0c, 0x24, 0xd8, 0x6f, 0x10, 0xd8, 0x60, 0xc7, 0xdf, 0xde, 0xc5, 0x8e, 0x45, 0xea, 0xc3, 0x07, 0xcb, 0xf4, 0xcc, 0x29, 0x81, 0x46, 0xae, 0xd6, 0x96, 0xbd, 0x36, 0x1e, 0x95, 0x28, 0x50, 0xd8, 0xbf, 0x78, 0x4d, 0x76, 0xfe, 0x85, 0x4a, 0x08, 0x8f, 0x58, 0x00, 0xa7, 0x48, 0x0f, 0xc7, 0x8c, 0x64, 0x31, 0x2a, 0x71, 0xba, 0x9f, 0xfd, 0xb6, 0xed, 0xb6, 0x69, 0x63, 0x7c, 0x43, 0x07, 0x40, 0xf5, 0x4e, 0x25, 0xcd, 0x71, 0xe9, 0xbf, 0xb6, 0x09, 0x7d, 0x4b, 0xaf, 0x04, 0x18, 0x7c, 0xf1, 0x66, 0xba, 0x0d, 0x91, 0x36, 0x9a, 0xce, 0x02, 0xe9, 0x9f, 0xb8, 0x2f, 0x58, 0x8f, 0xb6, 0xdd, 0x56, 0x7d, 0xf5, 0xf5, 0x99, 0x01, 0xd7, 0x4e, 0x57, 0xab, 0x33, 0x4a, 0x11, 0xe5, 0x1e, 0xb4, 0x37, 0xad, 0x1d, 0x26, 0xbc, 0x63, 0x99, 0x1f, 0x08, 0x1f, 0xf6, 0xfd, 0xdf, 0x08, 0xed, 0x72, 0x27, 0xe7, 0x80, 0xf7, 0x3e, 0xe4, 0xc4, 0xec, 0xd2, 0x45, 0x29, 0xb9, 0xd1, 0x68, 0xdc, 0x11, 0xb0, 0xc4, 0x4c, 0xd1, 0xb5, 0x61, 0x39, 0x52, 0x98, 0xce, 0xa5, 0x8d, 0xb6, 0xfc, 0xf1, 0x6f, 0xd3, 0x5b, 0xcf, 0x68, 0x14, 0x3c, 0x32, 0x08, 0xbe, 0xdb, 0xd3, 0x6a, 0xde, 0x93, 0x9d, 0xd5, 0x4d, 0x93, 0xf7, 0x33, 0x6b, 0xe4, 0xcb, 0xaf, 0x9a, 0xae, 0x16, 0xbe, 0xd5, 0xc3, 0x7c, 0x01, 0x47, 0x6b, 0xe0, 0x87, 0x00, 0xe8, 0x0b, 0x31, 0x3a, 0xb1, 0xa9, 0x8d, 0xa4, 0x4b, 0xd4, 0x1a, 0xf2, 0xdd, 0xf5, 0x4c, 0x82, 0x59, 0x5c, 0x61, 0x08, 0x1d, 0x04, 0x4d, 0x25, 0xcb, 0xe2, 0x47, 0x86, 0x5e, 0x03, 0xfb, 0x61, 0x3d, 0x85, 0x2c, 0x24, 0x49, 0x9a, 0x0d, 0xa8, 0x3b];
    qo = "qo=452; do{oo[qo]=(-oo[qo])&0xff; oo[qo]=(((oo[qo]>>1)|((oo[qo]<<7)&0xff))-232)&0xff;} while(--qo>=2);";
    eval(qo);
    qo = 451;
    do {
        oo[qo] = (oo[qo] - oo[qo - 1]) & 0xff;
    } while (--qo >= 3);
    qo = 1;
    for (; ;) {
        if (qo > 451) break;
        oo[qo] = ((((((oo[qo] + 135) & 0xff) + 61) & 0xff) << 5) & 0xff) | (((((oo[qo] + 135) & 0xff) + 61) & 0xff) >> 3);
        qo++;
    }
    po = "";
    for (qo = 1; qo < oo.length - 1; qo++) if (qo % 5) po += String.fromCharCode(oo[qo] ^ SG);
    console.log(po)
    // eval(po);
    // eval("qo=eval;qo(po);");
}

cu(99)
// console.log(cu(99))